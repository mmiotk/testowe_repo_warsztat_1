name: Odporna na b≈Çƒôdy architektura workflow
on: [push]

jobs:
  critical_validation:
    name: "Krytyczna walidacja"
    runs-on: ubuntu-latest
    steps:
      - name: Sprawdzenia, kt√≥re muszƒÖ siƒô udaƒá
        run: |
          echo "üéØ Krytyczna walidacja: podstawowe sprawdzenia"
          # Symulacja czasami niepowodzenia
          if [ $((RANDOM % 3)) -eq 0 ]; then
            echo "‚ùå Krytyczny b≈ÇƒÖd wykryty!"
            exit 1
          fi
          echo "‚úÖ Krytyczna walidacja przesz≈Ça pomy≈õlnie"

  optional_analysis:
    name: "Opcjonalna analiza"
    runs-on: ubuntu-latest
    steps:
      - name: Dodatkowe sprawdzenia
        run: |
          echo "üìä Opcjonalna analiza: dodatkowe metryki"
          # Symulacja czasami niepowodzenia
          if [ $((RANDOM % 2)) -eq 0 ]; then
            echo "‚ö†Ô∏è Analiza nie powiod≈Ça siƒô, ale to nie jest krytyczne"
            exit 1
          fi
          echo "‚úÖ Analiza zako≈Ñczona sukcesem"

  conditional_deployment:
    name: "Wdro≈ºenie warunkowe"
    # U≈ºywa always() ≈ºeby uruchomiƒá siƒô niezale≈ºnie od wynik√≥w poprzednik√≥w
    if: always()
    needs: [critical_validation, optional_analysis]
    runs-on: ubuntu-latest
    steps:
      - name: Analiza wynik√≥w i decyzja o wdro≈ºeniu
        run: |
          echo "ü§î Analizujƒô wyniki poprzednich zada≈Ñ:"
          
          # Sprawd≈∫ status krytycznej walidacji
          if [ "${{ needs.critical_validation.result }}" = "success" ]; then
            echo "‚úÖ Krytyczna walidacja: SUKCES"
            critical_ok=true
          else
            echo "‚ùå Krytyczna walidacja: NIEPOWODZENIE"
            critical_ok=false
          fi
          
          # Sprawd≈∫ status opcjonalnej analizy
          if [ "${{ needs.optional_analysis.result }}" = "success" ]; then
            echo "‚úÖ Opcjonalna analiza: SUKCES"
            analysis_ok=true
          else
            echo "‚ö†Ô∏è Opcjonalna analiza: NIEPOWODZENIE (ale to OK)"
            analysis_ok=false
          fi
          
          # Podejmij decyzjƒô o wdro≈ºeniu
          if [ "$critical_ok" = "true" ]; then
            echo "üöÄ DECYZJA: Wdra≈ºam - krytyczne sprawdzenia przesz≈Çy"
            echo "Dodatkowe informacje: analiza opcjonalna $([ "$analysis_ok" = "true" ] && echo "r√≥wnie≈º przesz≈Ça" || echo "nie powiod≈Ça siƒô, ale to nie blokuje wdro≈ºenia")"
          else
            echo "üõë DECYZJA: Nie wdra≈ºam - krytyczne sprawdzenia nie przesz≈Çy"
            exit 1
          fi

  notification_always:
    name: "Powiadomienie zespo≈Çu"
    if: always()  # Zawsze uruchom, niezale≈ºnie od wynik√≥w
    needs: [critical_validation, optional_analysis, conditional_deployment]
    runs-on: ubuntu-latest
    steps:
      - name: Podsumowanie i powiadomienie
        run: |
          echo "üìß Wysy≈Çanie podsumowania do zespo≈Çu:"
          echo "Krytyczna walidacja: ${{ needs.critical_validation.result }}"
          echo "Opcjonalna analiza: ${{ needs.optional_analysis.result }}"
          echo "Wdro≈ºenie: ${{ needs.conditional_deployment.result }}"
          
          # W rzeczywisto≈õci tutaj wys≈Ça≈Çby≈õ powiadomienie na Slack, email, itp.
          echo "‚úâÔ∏è Powiadomienie wys≈Çane do kana≈Çu #deployments"
