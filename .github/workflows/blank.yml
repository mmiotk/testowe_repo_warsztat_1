# .github/workflows/python-demo.yml
name: Komunikacja z akcjami Python
on: [push]

jobs:
  inputs_outputs_demo:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      # Akcja z wieloma parametrami wej≈õciowymi
      - name: Skonfiguruj ≈õrodowisko Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'              # Wymagany parametr
          cache: 'pip'                       # Opcjonalny - w≈ÇƒÖcz cache
          cache-dependency-path: 'requirements.txt'  # ≈öcie≈ºka do zale≈ºno≈õci
          architecture: 'x64'                # Opcjonalny - architektura
        # Ka≈ºdy parametr w sekcji 'with' jest przekazywany do akcji

      - name: Zainstaluj zale≈ºno≈õci
        run: pip install -r requirements.txt

      - name: Uruchom aplikacjƒô Python
        run: python src/app.py

      # Akcja generujƒÖca dane wyj≈õciowe
      - name: Generuj informacje o buildzie
        id: build-info
        uses: actions/github-script@v7
        with:
          script: |
            const buildTime = new Date().toISOString();
            const buildNumber = context.runNumber;
            const pythonVersion = '3.9';
            
            // Ustawianie outputs dla u≈ºycia w kolejnych krokach
            core.setOutput('build-time', buildTime);
            core.setOutput('build-number', buildNumber);
            core.setOutput('python-version', pythonVersion);
            
            return `Build ${buildNumber} completed at ${buildTime}`;

      # Krok u≈ºywajƒÖcy danych z poprzednej akcji
      - name: Wy≈õwietl informacje o buildzie
        run: |
          echo "üêç Python Version: ${{ steps.build-info.outputs.python-version }}"
          echo "‚è∞ Czas buildu: ${{ steps.build-info.outputs.build-time }}"
          echo "üî¢ Numer buildu: ${{ steps.build-info.outputs.build-number }}"
          echo "üìã Pe≈Çny wynik: ${{ steps.build-info.outputs.result }}"
        # Sk≈Çadnia steps.ID.outputs.NAZWA pozwala na dostƒôp do wynik√≥w
